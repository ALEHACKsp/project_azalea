# SConstruct file for the main kernel.

import os
import defaults

# Setup environment.
env = Environment()
defaults.setup_kernel_build_env(env)

# List of required components.
dependencies_in = [
                   # Core components
                   '#entry/SConscript',
                   '#processor/SConscript-generic',
                   '#processor/SConscript-x64',
                   '#klib/memory/SConscript',
                   '#klib/panic/SConscript',
                   '#mem/SConscript',
                   '#klib/c_helpers/SConscript',
                   '#klib/misc/SConscript',
                   '#klib/data_structures/SConscript',
                   '#klib/tracing/SConscript',
                   '#klib/synch/SConscript',
                   '#syscall/SConscript-kernel',
                   '#acpi/SConscript',
                   '#external/SConscript-ACPICA',
                   '#external/vsnprintf/Sconscript',
                   '#external/SConscript-libcxxrt',
                   '#object_mgr/SConscript',
                   '#system_tree/SConscript',
                   '#system_tree/process/SConscript',
                   
                   # Devices
                   '#devices/block/ramdisk/SConscript',
                   '#devices/block/ata/SConscript',
                   '#devices/block/proxy/SConscript',
                   
                   # Filesystems
                   '#system_tree/fs/fat/SConscript',
                   '#system_tree/fs/pipe/SConscript',
                  ]
                   
# Build components.
dependencies_out = [ ]

for dep in dependencies_in:
  # Transform the name so that the intermediate files end up in output/kernel/... and remove the SConscript part of the
  # path.
  out_dir = os.path.join('output', 'kernel', dep.strip('#'))
  out_dir = os.path.dirname(out_dir)
  dep_out = SConscript(dep, 'env', variant_dir=out_dir, duplicate=0)
  dependencies_out.append(dep_out)

env.Program("output/kernel64.sys", dependencies_out)
